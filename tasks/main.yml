---
- name: Create server user prinary groups.
  group:
    name: "{{ item.group | default(item.name) }}"
    state: present
  with_items: "{{ server_users }}"
  no_log: "{{ server_users_no_log }}"
  when: (item.state | default('present')) == 'present'

- name: Assemble a list of secondary groups.
  set_fact:
    _server_users_secondary_groups: "{{ _server_users_secondary_groups }} + {{ item.groups | default([]) }}"
  with_items: "{{ server_users }}"
  no_log: "{{ server_users_no_log }}"
  when: (item.state | default('present')) == 'present'

- name: Create secondary groups.
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ _server_users_secondary_groups }}"
  no_log: "{{ server_users_no_log }}"
  when: item != ""

- name: Create server users.
  user:
    name: "{{ item.name }}"
    password: "{{ item.password | default('') | password_hash('sha512') }}"
    state: "{{ item.state | default('present') }}"
    remove: "{{ item.remove | default('no') }}"
    group: "{{ item.group | default(item.name) }}"
    groups: "{{ item.groups | default('') }}"
    generate_ssh_key: "{{ item.ssh_key_generate | default(server_users_ssh_key_generate) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(server_users_ssh_key_bits) }}"
    shell: "{{ item.shell | default(server_users_shell) }}"
    home: "{{ item.home | default(omit) }}"
    createhome: "{{ item.createhome | default('yes') }}"
    move_home: "{{ item.move_home | default('yes') }}"
  with_items: "{{ server_users }}"
  no_log: "{{ server_users_no_log }}"

- name: Set authorized keys per user.
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.auth_keys | default('') }}"
    state: present
    exclusive: yes
  with_items: "{{ server_users }}"
  no_log: "{{ server_users_no_log }}"
  when: (item.state | default('present')) == 'present'

- name: Add ansible.cfg to each user acount.
  template:
    src: "templates/user_ansible.cfg.j2"
    dest: "/home/{{ item.name }}/.ansible.cfg"
  with_items: "{{ server_users }}"
  no_log: "{{ server_users_no_log }}"
  vars:
    ansible_cfg_role_path: "{{ item.ansible_role_path | default(server_users_ansible_role_path) }}"
    ansible_cfg_nocows: "{{ item.ansible_nocows | default(server_users_ansible_nocows) }}"
    ansible_cfg_log: "{{ item.ansible_log | default(server_users_ansible_log) }}"
    ansible_cfg_log_path: "{{ item.ansible_log_path | default(server_users_ansible_log_path) }}"
  when: (item.state | default('present')) == 'present'
